---
title: "Querying and plotting using the simpsons database"
author: "Jordan Sibley"
date: "2025-05-10"
execute: 
  eval: true
  message: false
  warning: false
format:
  html:
    toc: true
embed-resources: true
---

## Database query question 

Using the Simpsons database, I aim to answer the question: which characters have spoken the most total words, and what genders are represented among the top 12?


## Connect to database 

```{r}
# Read in libraries 
library(tidyverse)
library(here)
library(DBI)
library(duckdb)
library(dbplyr)
library(showtext) 
library(ggtext)
library(scales)
```

```{r}
# Connect to simpsons database 
conn <- DBI::dbConnect(duckdb::duckdb(),
                       dbdir="build_simp_database/simpsons.db")
```

## Query database 

Here is the query to get the data I need to create the plot to answer my question: 

```
SELECT characters.name, characters.gender, SUM(script_lines.word_count) AS total_word_count 
  FROM script_lines
  LEFT JOIN characters 
    ON script_lines.character_id = characters.id
  WHERE script_lines.speaking_line = TRUE
  GROUP BY characters.name, characters.gender
  ORDER BY total_word_count DESC
  LIMIT 12;
```

```{r}
# Query database using DBI connection 
top_lines_query <- dbGetQuery(conn, "SELECT characters.name, characters.gender, SUM(script_lines.word_count) AS total_word_count 
  FROM script_lines
  LEFT JOIN characters 
    ON script_lines.character_id = characters.id
  WHERE script_lines.speaking_line = TRUE
  GROUP BY characters.name, characters.gender
  ORDER BY total_word_count DESC
  LIMIT 12;")
```


## Data Visualization 

font source: https://www.dafont.com/simpsonfont.font
```{r}
# Import simpsons font 
font_add(family = "Simpsonfont", regular = here('fonts', 'Simpsonfont.otf'))
showtext_auto()

font_add_google(name = "Chewy", family = "Chewy")
```


```{r}
# Create lollipop chart to visualize chars with top spoken words 
top_lines_query |> 
  # factor order by name to maintain descending order of characters
  arrange(total_word_count) |>   
  mutate(name=factor(name, levels=name)) |> 
  # initialize ggplot 
ggplot( aes(x = name, y = total_word_count, color = gender)) + 
  # geoms for lollipop chart 
  geom_segment(aes(xend = name, yend=0), linewidth = 1.3) + 
  geom_point(size = 6) + 
  # flip x y coords  
  coord_flip(clip = "off") + 
  # axis labels 
  labs(y = "Number of words spoken", 
       title = "Where Are the Women? The Simpsons' Speaking Roles Tell a Story of Gender Imbalance",
       subtitle = "Across 118 episodes (Seasons 21â€“26), <span style='color:#357ABD;'>male</span> characters dominate the top speakers list, <br>while Marge and Lisa are the only <span style='color:#DD6641;'>female</span> characters represented."
) + 
  # custom colors for gender 
  scale_color_manual(values = c("Female" = "#DD6641", "Male" = "#357ABD")) + 
  scale_y_continuous(breaks = seq(0, max(top_lines_query$total_word_count), by = 10000), 
                     labels = scales::comma) +
  
  # manually write character labels to include black text border 
  shadowtext::geom_shadowtext(
    aes(x = name, y = -max(total_word_count) * 0.05, label = name),  # slightly off the axis
    inherit.aes = FALSE, family = "Simpsonfont",
    size = 5,
    color = "#FCEB56", # inner font color
    bg.color = "#211E1F", # outline color
    bg.r = 0.1, # outline thickness
    hjust = 1
  ) +
  
  # theme elements 
  theme_minimal() + 
  theme(
    # remove y axis title & legend 
    axis.title.y = element_blank(),
    legend.position = "none",
   
    # Text elements 
    # hide default y labels
    axis.text.y = element_blank(),  
    # x axis title and text  
    axis.title.x = element_text(family = "Simpsonfont", size = 13, color = "#211E1F"),
    axis.text.x = element_text(family = "Chewy", size = 12, color = "#211E1F"),
    plot.title = element_text(family = "Chewy", size = 17.5, color = "#211E1F", hjust = 0.4), 
    plot.subtitle = element_markdown(family = "Chewy", size = 12, color = "#211E1F", hjust = 0.5),
    
    # grid lines 
    panel.grid.major = element_line(color = "#A9606C"),
    # remove minor grid lines 
    panel.grid.minor = element_blank(),
    
    # fix margins 
    plot.margin = margin(t = 10, r = 20, b = 10, l = 135), 
    # panel background color 
    plot.background = element_rect(fill = "#F1C8CD")
  )
  
  
  
ggsave("plots/simpsons_plot.pdf", width = 10, height = 6)
```


### Close the database connection 

```{r}
DBI::dbDisconnect(conn, shutdown = TRUE)
```

